name: Lock Stale Issues

on:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

permissions:
  issues: write

concurrency:
  group: lock-threads

jobs:
  lock-closed-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Lock closed issues after 14 days of inactivity
        uses: actions/github-script@v7
        with:
          script: |
            const cutoff = new Date();
            cutoff.setDate(cutoff.getDate() - 14);

            const lockComment = [
              "This issue is locked because it has been closed for 14 days with no further activity.",
              "",
              "If the problem returns, please open a new issue with updated reproduction steps and link back to this discussion.",
              "",
              "ðŸ”— Edge Craft contribution guides: https://github.com/dcversus/edgecraft/blob/main/CONTRIBUTING.md"
            ].join("\n");

            let lockedCount = 0;
            let page = 1;
            let hasMore = true;

            while (hasMore) {
              const { data: issues } = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "closed",
                sort: "updated",
                direction: "asc",
                per_page: 100,
                page
              });

              if (issues.length === 0) {
                hasMore = false;
                break;
              }

              for (const issue of issues) {
                if (issue.pull_request || issue.locked) {
                  continue;
                }

                const updatedAt = new Date(issue.updated_at);
                if (updatedAt > cutoff) {
                  hasMore = false;
                  break;
                }

                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: lockComment
                });

                await github.rest.issues.lock({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  lock_reason: "resolved"
                });

                lockedCount += 1;
                console.log(`Locked issue #${issue.number}: ${issue.title}`);
              }

              page += 1;
            }

            console.log(`Total locked issues: ${lockedCount}`);
